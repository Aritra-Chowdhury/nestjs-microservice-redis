{
  "swagger": "2.0",
  "info": {
    "description": "A banking-management-application ,used for creating and maintain customer account. It also allows the customer to apply for a loan.",
    "version": "1.0.0",
    "title": "Banking API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "chowdhuryaritra96@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "customer",
      "description": "Everything about the customer"
    },
    {
      "name": "account",
      "description": "Account related opertaions for the customer account"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/customer/register": {
      "post": {
        "tags": [
          "customer"
        ],
        "summary": "Register a new customer",
        "description": "Allows user to register into the application.",
        "operationId": "register",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Customer object that needs to be registered.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerBasic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successful.",
            "schema": {
              "$ref": "#/definitions/CustomerBasic"
            }
          },
          "400": {
            "description": "Invalid request body"
          }
        }
      }
    },
    "/customer/login": {
      "post": {
        "tags": [
          "customer"
        ],
        "summary": "Customers can login into the application",
        "description": "Allows user to login into the appliation with either customerId or email and password",
        "operationId": "login",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Customer object that needs to be registered.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerBasic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successful.",
            "schema": {
              "$ref": "#/definitions/CustomerBasic"
            },
            "headers": {
              "x-auth-token": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/customer": {
      "put": {
        "tags": [
          "customer"
        ],
        "summary": "Update an existing customer",
        "description": "",
        "operationId": "updateCustomer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Customer details object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "x-auth-token",
            "description": "Authentication token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Customer details update successful.",
            "schema": {
              "$ref": "#/definitions/CustomerReponse"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Customer not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/customer/{customerId}": {
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "Find customer by customerID",
        "description": "Returns a single customer",
        "operationId": "getCustomerById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "CustomerID of customer to return",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "x-auth-token",
            "description": "Authentication token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerReponse"
            }
          },
          "400": {
            "description": "Invalid CustomerID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Customer not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/customer/logout": {
      "get": {
        "tags": [
          "customer"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutCustomer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "x-auth-token",
            "description": "Authentication token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Customer not found."
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/account": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Creates an bank account for the customer",
        "description": "Allows user to create a new bank account.",
        "operationId": "createAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Account object that needs to be created.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "x-auth-token",
            "description": "Authentication token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Account created successful.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "account"
        ],
        "summary": "Update an existing account",
        "description": "",
        "operationId": "updateAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Account details object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "x-auth-token",
            "description": "Authentication token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Account details update successful.",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "account not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Find all account for a customer",
        "description": "Returns an array of Account details",
        "operationId": "getAccountByCustomerId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "x-auth-token",
            "description": "Authentication token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "400": {
            "description": "Invalid AccountID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/account/{accountId}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Find account by accountID",
        "description": "Returns a single Account details",
        "operationId": "getAccountById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "AccountID of account to return",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "x-auth-token",
            "description": "Authentication token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Invalid AccountID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Account not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "account"
        ],
        "summary": "Remove/deactivate an account",
        "description": "Remove/deactivate an account",
        "operationId": "removeAccountById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "AccountID of the account to remove",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "x-auth-token",
            "description": "Authentication token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Account succesfully removed/deactivated.",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          },
          "400": {
            "description": "Invalid AccountID supplied"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Account not found"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "x-auth-token",
      "in": "header"
    }
  },
  "definitions": {
    "CustomerBasic": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "CustomerId for customer."
        },
        "isActive": {
          "type": "string",
          "description": "Customer account status."
        },
        "name": {
          "type": "string",
          "description": "Name of the customer."
        },
        "email": {
          "type": "string",
          "description": "Email Id of the customer."
        },
        "password": {
          "type": "string",
          "description": "Credential to login in the appliation."
        }
      },
      "required": [
        "name",
        "email",
        "password"
      ]
    },
    "Customer": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "CustomerId for customer."
        },
        "name": {
          "type": "string",
          "description": "Name of the customer."
        },
        "email": {
          "type": "string",
          "description": "Email Id of the customer."
        },
        "password": {
          "type": "string",
          "description": "Credential to login in the appliation."
        },
        "user_details": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/UserDetails"
            }
          ],
          "description": "Personal details of the customer."
        },
        "mailingaddress": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/MailingAddress"
            }
          ],
          "description": "Mailing address of the customer."
        }
      },
      "required": [
        "customerId"
      ],
      "xml": {
        "name": "Customer"
      }
    },
    "CustomerReponse": {
      "type": "object",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "CustomerId for customer."
        },
        "name": {
          "type": "string",
          "description": "Name of the customer."
        },
        "email": {
          "type": "string",
          "description": "Email Id of the customer."
        },
        "user_details": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/UserDetails"
            }
          ],
          "description": "Personal details of the customer."
        },
        "mailingaddress": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/MailingAddress"
            }
          ],
          "description": "Mailing address of the customer."
        }
      },
      "xml": {
        "name": "CustomerReponse"
      }
    },
    "UserDetails": {
      "type": "object",
      "properties": {
        "dob": {
          "type": "string",
          "format": "date-time",
          "description": "Date of the birth of the customer."
        },
        "martial_status": {
          "type": "string",
          "description": "Martial status of the customer.",
          "enum": [
            "unmarried",
            "married",
            "separated"
          ]
        },
        "pan_card": {
          "type": "string",
          "description": "Pan Card number of the customer."
        },
        "nationality": {
          "type": "string",
          "description": "Nationality of the customer."
        },
        "phone_number": {
          "type": "string",
          "description": "Phone number of the customer."
        }
      },
      "required": [
        "dob",
        "martial_status",
        "pan_card",
        "nationality",
        "phone_number"
      ],
      "xml": {
        "name": "UserDetails"
      }
    },
    "MailingAddress": {
      "type": "object",
      "properties": {
        "address1": {
          "type": "string",
          "description": "Mailing address1 of the customer."
        },
        "address2": {
          "type": "string",
          "description": "Mailing address2 of the customer."
        },
        "city": {
          "type": "string",
          "description": "Mailing city of the customer."
        },
        "state": {
          "type": "string",
          "description": "Mailing state of the customer."
        },
        "country": {
          "type": "string",
          "description": "Mailing country of the customer."
        },
        "zip-code": {
          "type": "string",
          "description": "Mailing zip-code of the customer."
        }
      },
      "required": [
        "address1",
        "city",
        "state",
        "country",
        "zip-code"
      ],
      "xml": {
        "name": "MailingAddress"
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "account_number": {
          "type": "string",
          "description": "Account_number for the customer account."
        },
        "account_type": {
          "type": "string",
          "enum": [
            "Current",
            "Saving",
            "Credit"
          ],
          "description": "Account_type for the customer account."
        },
        "customer_id": {
          "type": "string",
          "description": "Customer_id of the customer."
        },
        "user_details": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/UserDetails"
            }
          ],
          "description": "Personal details of the customer."
        },
        "mailingaddress": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/MailingAddress"
            }
          ],
          "description": "Mailing address of the customer."
        },
        "opening_date": {
          "type": "string",
          "format": "date-time",
          "description": "Account opening date.",
          "default": "current date"
        },
        "closing_date": {
          "type": "string",
          "format": "date-time",
          "description": "Account closing date.",
          "default": ""
        }
      },
      "required": [
        "account_type",
        "customer_id",
        "user_details",
        "mailingaddress",
        "zip-code"
      ],
      "xml": {
        "name": "Account"
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}